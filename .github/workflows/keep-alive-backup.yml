name: Keep Server Alive - Backup Schedule

on:
  schedule:
    # Run every 14 minutes as backup (to avoid conflicts with main schedule)
    - cron: '*/14 * * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  ping-server-backup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Backup Ping to Render Server
        run: |
          echo "üîÑ Backup ping to keep server alive..."
            # Use the same URL from secrets or fallback
          RENDER_URL="https://attendence-jmza.onrender.com/"
          if [ -z "$RENDER_URL" ]; then
            RENDER_URL="https://attendence-jmza.onrender.com/"
          fi
          
          # Ping with timeout and retry logic
          for i in {1..3}; do
            echo "Attempt $i/3..."
            
            response=$(curl -s -o /dev/null -w "%{http_code}" -m 30 "$RENDER_URL/api/health" || echo "000")
            
            if [ "$response" = "200" ]; then
              echo "‚úÖ Backup ping successful! Response code: $response"
              break
            elif [ "$i" -eq 3 ]; then
              echo "‚ùå All attempts failed. Final response code: $response"
              # Try one more time with root URL
              root_response=$(curl -s -o /dev/null -w "%{http_code}" -m 30 "$RENDER_URL" || echo "000")
              echo "Final root URL attempt response: $root_response"
            else
              echo "‚ö†Ô∏è Attempt $i failed with code: $response, retrying..."
              sleep 10
            fi
          done
          
          echo "Backup ping completed at $(date)"
      
      - name: System Info
        run: |
          echo "Runner info: $(uname -a)"
          echo "Current time: $(date -u)"
